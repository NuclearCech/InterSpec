#ifndef SpecUtils_config_h
#define SpecUtils_config_h
/* SpecUtils: a library to parse, save, and manipulate gamma spectrum data files.
 
 Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC
 (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
 Government retains certain rights in this software.
 For questions contact William Johnson via email at wcjohns@sandia.gov, or
 alternative emails of interspec@sandia.gov, or srb@sandia.gov.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */


#cmakedefine01 PERFORM_DEVELOPER_CHECKS
#cmakedefine01 BUILD_AS_UNIT_TEST_SUITE
#cmakedefine01 SPECTRUM_DATA_STRUCTS_NO_BOOST_LIB
#cmakedefine01 REBIN_FILES_TO_SINGLE_BINNING
#cmakedefine01 ENABLE_D3_CHART_EXPORTING
#cmakedefine01 SpecUtils_EXTERNALLY_DEFINED_LOG_MESSAGE
#cmakedefine01 SpecUtils_USE_WT_THREADPOOL
#cmakedefine01 SpecUtils_D3_SUPPORT_FILE_STATIC

#cmakedefine01 SpecUtils_PYTHON_BINDINGS
#cmakedefine01 SpecUtils_JAVA_SWIG

#define BOOST_DATE_TIME_NO_LIB

namespace boost
{
  template<class type> class shared_ptr;
}//namespace boost

class Measurement;

#if ( defined(WIN32) || defined(UNDER_CE) || defined(_WIN32) || defined(WIN64) )
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <float.h>
#define isnan(x) _isnan(x)
#define isinf(x) (!_finite(x))
#define fpu_error(x) (isinf(x) || isnan(x))
#endif

#if( __cplusplus > 199711L || defined(ANDROID) || defined(__APPLE__) )
#define IsInf(x) std::isinf(x)
#define IsNan(x) std::isnan(x)
#else
#define IsInf(x) isinf(x)
#define IsNan(x) isnan(x)
#endif


#if(PERFORM_DEVELOPER_CHECKS)
//log_developer_error(...) is implemented in SpectrumDataStructs.cpp, but
//  declared here so can be used everywhere.
//Error messages go to developer_errors.log in the cwd
void log_developer_error( const char *location, const char *error );
#endif

#endif // InterSpec_config_h
